@using SocialMovie.Models
@using System.Collections.Generic

<h1></h1>

<div class="container-fluid" align="center">
    @{  var movie = (Movie)ViewData["movie"];
        <div class="row">
            <div class="offset-1 col-10 offset-1">
                <div class="row rounded" style="background-color: #CCCCCC">
                    <div class="offset-sm-2"></div>
                    <div class="col-sm-8">
                        <br />
                        <div align="center" class="embed-responsive embed-responsive-4by3" style="background-color: #000000">
                            <video class="video-js vjs-default-skin" id="video_@movie.Id" poster="https://socialmovie.sytes.net:4000/@movie.Thumbnail.FullPath" onClick="setupVideo('https', 'socialmovie.sytes.net','4000','@movie.VideoFile.Path', '@movie.VideoFile.Name', '@movie.VideoFile.Extension', '@movie.Id')" controls></video>

                        </div>
                        <div class="rounded" style="background-color: #AAAAAA">
                            <h3></h3>
                            <p><strong>@movie.Name </strong>@movie.Description</p>
                        </div>
                        <div id="controls">
                            <button id="playpause" title="play" onclick="togglePlayPause();">Play</button>
                        </div>
                        <input id="volume" min="0" max="1" step="0.1" type="range" onchange="setVolume()" />
                        <button id="mute" onclick="toggleMute()">Mute</button>
                        <div id="progressBar" min="0" max="100" value="0">0% played</div>
                    </div>
                    <div class="offset-sm-2"></div>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="offset-1 col-10 offset-1">
            <div class="row rounded" style="background-color: #CCCCCC">
                <div class="offset-sm-6"></div>
                <div class="col-sm-4" style="background-color: #AAAAAA">
                    <p>Ratings</p>
                    @{
                        int[] stars = new int[5] { movie.Star1, movie.Star2, movie.Star3, movie.Star4, movie.Star5 };
                        int totalStars = movie.Star5 + movie.Star2 + movie.Star3 + movie.Star2 + movie.Star1;
                        int[] relativeStars = new int[5];
                        for (int i = 0; i < 5; i++)
                        {
                            relativeStars[i] = (stars[i] * 100) / (totalStars);
                        }
                        int j = 5;
                    }
                    @{  for (int i = 4; i >= 0; i--, j--)
                        {
                            <div class="row">
                                <div class="col-8">
                                    <div class="progress">
                                        <div class="progress-bar" role="progressbar"
                                             aria-valuemin="0" aria-valuemax="@totalStars.ToString()" style="width: @relativeStars[i].ToString()%">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">@j Star</div>
                            </div>
                        }
                    }
                    <br />
                </div>
                <div class="offset-sm-2"></div>
            </div>
            <br />
        </div>
        <br />
    </div>

    @{  var reviews = (List<Review>)ViewData["reviews"];
        for (int i = 0; i < 4; i++)
        {
            foreach (var review in reviews)
            {
            <div class="row">
                <div class="offset-1 col-10 offset-1">
                    <div class="row rounded" style="background-color: #CCCCCC;">
                        <div class="offset-sm-2"></div>
                        <div class="col-sm-8 rounded" style="background-color: #AAAAAA;border:1px solid black;">
                            <div class="row">
                                <div class="col-8"><h3 style="position: absolute; left: 5%;">@review.Title</h3></div>
                                <div class="col-4"><h3 style="position: absolute; right: 5%;"><strong>@review.Rating </strong></h3></div>
                            </div>
                            <br />
                            <br />
                            <p align="left"><strong>@review.ReviewerId: </strong> @review.Body</p>
                        </div>
                        <div class="offset-sm-2"></div>
                    </div>
                </div>

            </div>
            }
        }
    }
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
</div>

<script>
    // Grab a handle to the video
    var video = document.getElementById("video_3");
    // Turn off the default controls
    //video.controls = false;

    video.addEventListener("timeupdate", updateProgressBar, false);

    function togglePlayPause() {
        var playpause = document.getElementById("playpause");
        if (video.paused || video.ended) {
            playpause.title = "pause";
            playpause.innerHTML = "pause";
            video.play();
        }
        else {
            playpause.title = "play";
            playpause.innerHTML = "play";
            video.pause();
        }
    }
    function setVolume() {
        var volume = document.getElementById("volume");
        video.volume = volume.value;
    }

    function toggleMute() {
        video.muted = !video.muted;
    }

    function updateProgressBar() {
        var progressBar = document.getElementById('progressBar');
        var percentage = Math.floor((100 / mediaPlayer.duration) * mediaPlayer.currentTime);
        progressBar.value = percentage;
        progressBar.innerHTML = percentage + '% played';
    }

    //function updateProgress() {
    //    var progress = document.getElementById("progress");
    //    var value = 0;
    //    if (video.currentTime > 0) {
    //        value = Math.floor((100 / video.duration) * video.currentTime);
    //    }
    //    progress.style.width = value + "%";
    //}

</script>